<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- websocket -->
   <websocket:handlers allowed-origins="*" >
      <websocket:mapping handler="handlerChat" path="/chat" />
        <websocket:sockjs websocket-enabled="true" />
   </websocket:handlers>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/images/**" location="/WEB-INF/images/" /> <!-- image -->
	
	<resources mapping="/uploadImages/**"
		location="/WEB-INF/uploadImages/" /> <!-- uploadImages -->
<!-- 	<resources mapping="/uploadImage/**"
		location="/WEB-INF/uploadImage/" /> 로컬 폴더 uploadImage -->
		
	<resources mapping="/profileimage/**"
		location="/WEB-INF/profileimage/" /> 
		
	<resources mapping="/css/**" location="/WEB-INF/css/" /> <!-- css -->
	<resources mapping="/js/**" location="/WEB-INF/js/" /> <!-- javascript -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.ojo.spring" />

	<!-- 데이터베이스 연결 정보를 설정하는 DriverManagerDataSource 클래스의 bean을 설정한다. -->
	<beans:bean name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="username" value="admin" />
		<beans:property name="password" value="Ojo123456789" />
	</beans:bean>



	<!-- 데이터베이스 연결 정보와 데이터베이스에 연결한 후 실행할 sql 명령이 저장된 xml 파일의 경로를 설정하는 bean을 
		설정한다. -->
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 데이터베이스 연결 정보를 설정한다. -->
		<beans:property name="dataSource" ref="dataSource" />
		<!-- 실행할 sql 명령이 저장된 xml 파일의 경로를 설정한다. -->
		<!-- value 속성에 xml 파일이 위치한 패키지 이름과 xml 파일의 경로를 입력한다. -->
		<!-- value 속성에 지정한 패키지에 xml 파일이 없으면 BeanCreationException이 발생된다. -->
		<beans:property name="mapperLocations"
			value="classpath:com/ojo/dao/*.xml" />
		<!-- 필요하다면 typeAliease 설정 정보가 저장된 xml 파일의 경로를 설정한다. -->
		<beans:property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</beans:bean>

	<!-- 데이터베이스 연결 정보, 실행할 sql 명령이 저장된 xml 파일의 경로를 참조하여 mybatis mapper로 사용할 
		bean을 설정ㅎ나다. -->
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>

	<!-- 파일 업로드를 위한 bean을 설정한다. -->
	<beans:bean id="commonsMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="20971520"></beans:property>   <!-- 최대 업로드 파일 크기 -->
		<beans:property name="maxInMemorySize" value="10485760"></beans:property> <!-- 메모리에 최대로 저장할 수 있는 공간 -->
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.ojo.sns.NaverLoginBO"/>
	
	<!-- KakaoLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="kakaoLoginBO" class="com.ojo.sns.KakaoLoginBO"/>



</beans:beans>
